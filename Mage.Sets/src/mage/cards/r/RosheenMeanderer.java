package mage.cards.r;

import mage.ConditionalMana;
import mage.MageInt;
import mage.Mana;
import mage.abilities.Ability;
import mage.abilities.costs.Cost;
import mage.abilities.costs.mana.ManaCosts;
import mage.abilities.costs.mana.VariableManaCost;
import mage.abilities.effects.mana.BasicManaEffect;
import mage.abilities.mana.BasicManaAbility;
import mage.abilities.mana.conditional.ManaCondition;
import mage.cards.CardImpl;
import mage.cards.CardSetInfo;
import mage.constants.CardType;
import mage.constants.SubType;
import mage.constants.SuperType;
import mage.game.Game;

import java.util.UUID;

/**
 * @author jeffwadsworth
 */
public final class RosheenMeanderer extends CardImpl {

    public RosheenMeanderer(UUID ownerId, CardSetInfo setInfo) {
        super(ownerId, setInfo, new CardType[]{CardType.CREATURE}, "{3}{R/G}");
        addSuperType(SuperType.LEGENDARY);
        this.subtype.add(SubType.GIANT);
        this.subtype.add(SubType.SHAMAN);
        this.power = new MageInt(4);
        this.toughness = new MageInt(4);

        // {T}: Add {C}{C}{C}{C}. Spend this mana only on costs that contain {X}.
        this.addAbility(new RosheenMeandererManaAbility());

    }

    public RosheenMeanderer(final RosheenMeanderer card) {
        super(card);
    }

    @Override
    public RosheenMeanderer copy() {
        return new RosheenMeanderer(this);
    }
}

class RosheenMeandererManaAbility extends BasicManaAbility {

    RosheenMeandererManaAbility() {
        super(new BasicManaEffect(new RosheenMeandererConditionalMana()));
        this.netMana.add(Mana.ColorlessMana(4));
    }

    RosheenMeandererManaAbility(RosheenMeandererManaAbility ability) {
        super(ability);
    }

    @Override
    public RosheenMeandererManaAbility copy() {
        return new RosheenMeandererManaAbility(this);
    }
}

class RosheenMeandererConditionalMana extends ConditionalMana {

    public RosheenMeandererConditionalMana() {
        super(Mana.ColorlessMana(4));
        staticText = "Spend this mana only on costs that contain {X}";
        addCondition(new RosheenMeandererManaCondition());
    }
}

class RosheenMeandererManaCondition extends ManaCondition {

    /*
    A “cost that contains {X}” may be a spell’s total cost, an activated ability’s cost, a suspend cost, or a cost you’re
    asked to pay as part of the resolution of a spell or ability (such as Condescend). A spell’s total cost includes either
    its mana cost (printed in the upper right corner) or its alternative cost (such as flashback), as well as any additional
    costs (such as kicker). If it’s something you can spend mana on, it’s a cost. If that cost includes the {X} symbol in it,
    you can spend mana generated by Rosheen on that cost. (2017-11-17)
    */

    @Override
    public boolean apply(Game game, Ability source, UUID originalId, Cost costToPay) {
        if (costToPay instanceof ManaCosts) {
            return !((ManaCosts) costToPay).getVariableCosts().isEmpty();
        } else {
            return costToPay instanceof VariableManaCost;
        }
    }
}
